// @generated by protobuf-ts 2.8.2
// @generated from protobuf file "message.proto" (syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message Message
 */
export interface Message {
    /**
     * @generated from protobuf field: repeated RawReport reports = 1;
     */
    reports: RawReport[];
}
/**
 * @generated from protobuf message RawReport
 */
export interface RawReport {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: int32 size = 2;
     */
    size: number;
    /**
     * @generated from protobuf field: string target = 3;
     */
    target: string;
    /**
     * @generated from protobuf field: map<string, RawOperationMapRecord> map = 4;
     */
    map: {
        [key: string]: RawOperationMapRecord;
    };
    /**
     * @generated from protobuf field: repeated RawOperation operations = 5;
     */
    operations: RawOperation[];
}
/**
 * @generated from protobuf message RawOperationMapRecord
 */
export interface RawOperationMapRecord {
    /**
     * @generated from protobuf field: string key = 1;
     */
    key: string;
    /**
     * @generated from protobuf field: string operation = 2;
     */
    operation: string;
    /**
     * @generated from protobuf field: optional string operationName = 3;
     */
    operationName?: string;
    /**
     * @generated from protobuf field: repeated string fields = 4;
     */
    fields: string[];
}
/**
 * @generated from protobuf message RawOperation
 */
export interface RawOperation {
    /**
     * @generated from protobuf field: string operationMapKey = 1;
     */
    operationMapKey: string;
    /**
     * @generated from protobuf field: int32 timestamp = 2;
     */
    timestamp: number;
    /**
     * @generated from protobuf field: optional int32 expiresAt = 3;
     */
    expiresAt?: number;
    /**
     * @generated from protobuf field: Execution execution = 4;
     */
    execution?: Execution;
    /**
     * @generated from protobuf field: optional Metadata metadata = 5;
     */
    metadata?: Metadata;
}
/**
 * @generated from protobuf message Execution
 */
export interface Execution {
    /**
     * @generated from protobuf field: bool ok = 1;
     */
    ok: boolean;
    /**
     * @generated from protobuf field: int32 duration = 2;
     */
    duration: number;
    /**
     * @generated from protobuf field: int32 errorsTotal = 3;
     */
    errorsTotal: number;
}
/**
 * @generated from protobuf message Metadata
 */
export interface Metadata {
    /**
     * @generated from protobuf field: optional Client client = 1;
     */
    client?: Client;
}
/**
 * @generated from protobuf message Client
 */
export interface Client {
    /**
     * @generated from protobuf field: optional string name = 1;
     */
    name?: string;
    /**
     * @generated from protobuf field: optional string version = 2;
     */
    version?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Message$Type extends MessageType<Message> {
    constructor() {
        super("Message", [
            { no: 1, name: "reports", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RawReport }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Message
 */
export const Message = new Message$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RawReport$Type extends MessageType<RawReport> {
    constructor() {
        super("RawReport", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "target", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "map", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => RawOperationMapRecord } },
            { no: 5, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RawOperation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message RawReport
 */
export const RawReport = new RawReport$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RawOperationMapRecord$Type extends MessageType<RawOperationMapRecord> {
    constructor() {
        super("RawOperationMapRecord", [
            { no: 1, name: "key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "operation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "operationName", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "fields", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message RawOperationMapRecord
 */
export const RawOperationMapRecord = new RawOperationMapRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RawOperation$Type extends MessageType<RawOperation> {
    constructor() {
        super("RawOperation", [
            { no: 1, name: "operationMapKey", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "timestamp", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "expiresAt", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "execution", kind: "message", T: () => Execution },
            { no: 5, name: "metadata", kind: "message", T: () => Metadata }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message RawOperation
 */
export const RawOperation = new RawOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Execution$Type extends MessageType<Execution> {
    constructor() {
        super("Execution", [
            { no: 1, name: "ok", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "duration", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "errorsTotal", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Execution
 */
export const Execution = new Execution$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Metadata$Type extends MessageType<Metadata> {
    constructor() {
        super("Metadata", [
            { no: 1, name: "client", kind: "message", T: () => Client }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Metadata
 */
export const Metadata = new Metadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Client$Type extends MessageType<Client> {
    constructor() {
        super("Client", [
            { no: 1, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "version", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Client
 */
export const Client = new Client$Type();
